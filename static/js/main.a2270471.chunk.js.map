{"version":3,"sources":["components/Card/Card.jsx","components/Cards/Cards.jsx","components/Page/Page.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","quote","name","position","className","src","alt","Cards","customerSlider","useRef","settings","infinite","arrows","dots","ref","slider","current","console","log","authorName","map","item","onClick","slickPrev","slickNext","Page","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uQAmBeA,MAff,YAAwC,IAAzBC,EAAwB,EAAxBA,MAAOC,EAAiB,EAAjBA,KAAMC,EAAW,EAAXA,SACxB,OACQ,sBAAKC,UAAU,yBAAf,UACI,sBAAKA,UAAU,sCAAf,UACI,qBAAKC,IAAI,oBAAoBC,IAAI,SACjC,mBAAGF,UAAU,wBAAb,SAAsCH,OAE1C,sBAAKG,UAAU,eAAf,UACI,4BAAIF,IACJ,4BAAIC,W,mDCoDTI,MA1Df,WACI,IAyBMC,EAAiBC,mBAEjBC,EAAW,CACbC,UAAU,EACVC,QAAQ,EACRC,MAAM,EAENC,IAAK,SAACC,GAAD,OAAaP,EAAeQ,QAAUD,IAQ/C,OAJAE,QAAQC,IAAIV,EAAeQ,SAKvB,sBAAKZ,UAAU,mBAAf,UACQ,cAAC,IAAD,2BAAYM,GAAZ,aA1CC,CACT,CACIT,MAAO,qIACPkB,WAAY,cACZhB,SAAU,mBAEd,CACIF,MAAO,yFACPkB,WAAY,eACZhB,SAAU,mBAEd,CACIF,MAAO,mGACPkB,WAAY,eACZhB,SAAU,qBAEd,CACIF,MAAO,uFACPkB,WAAY,kBACZhB,SAAU,iBAwBIiB,KAAI,SAAAC,GAAI,OAAI,cAAC,EAAD,CAAMnB,KAAMmB,EAAKF,WAAYlB,MAAOoB,EAAKpB,MAAOE,SAAUkB,EAAKlB,iBAErF,sBAAKC,UAAU,wBAAf,UACI,cAAC,IAAD,CAAe,eAAa,MAAMA,UAAU,aAAakB,QAAS,kBAAMd,EAAeQ,QAAQO,eAC/F,cAAC,IAAD,CAAgB,eAAa,MAAMnB,UAAU,aAAakB,QAAS,kBAAMd,EAAeQ,QAAQQ,sBCtCrGC,MAXf,WACI,OACI,qBAAKrB,UAAU,wBAAf,SACG,qBAAKA,UAAU,wBAAf,SAEK,cAAC,EAAD,SCADsB,MARf,WACE,OACE,8BACI,cAAC,EAAD,OCMOC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.a2270471.chunk.js","sourcesContent":["import React from 'react'\nimport './Card_Styled.css'\n\n\nfunction Card({quote, name, position}) {\n    return (\n            <div className=\"card--hidden-container\">\n                <div className=\"card--flex-row card--flex-first-row\">\n                    <img src=\"./images/logo.png\" alt=\"Logo\" />\n                    <p className='card--width-first-row'>{quote}</p>\n                </div>\n                <div className=\"card--author\">\n                    <p>{name}</p>\n                    <p>{position}</p>\n                </div>\n            </div>\n    )\n}\n\nexport default Card\n","import React, { useState, useRef } from \"react\";\nimport Card from '../Card/Card'\nimport './Cards_Styled.css'\nimport \"slick-carousel/slick/slick.css\";\nimport \"slick-carousel/slick/slick-theme.css\";\nimport Slider from 'react-slick'\nimport { BsChevronRight,BsChevronLeft } from \"react-icons/bs\";\nfunction Cards() {\n    const info = [\n        {\n            quote: \"\\\"Very simple to use, great automation and keeps me on track with all I need to do. I also like that it can be shared with others.\\\"\",\n            authorName: \"TERRY IVANS\",\n            position: \"Project manager\",\n        },\n        {\n            quote: \"\\\"Easiest and most effective way to boost your revenue by decreasing card abandonment.\\\"\",\n            authorName: \"DAVID HENZEL\",\n            position: \"Product manager\",\n        },\n        {\n            quote: \"\\\"Within 1 month of setting up, our convention rate of visitors to email subcribers shot up 20%.\\\"\",\n            authorName: \"BEN PHILBAUM\",\n            position: \"Marketing manager\",\n        },\n        {\n            quote: \"\\\"Great theme and my site looks wonderful! A huge step up from the Thesis Framework.\\\"\",\n            authorName: \"LILACH BULLOCKS\",\n            position: \"Entrepreneur\",\n        },\n    ]\n\n\n\n    const customerSlider = useRef();\n\n    const settings = {\n        infinite: true,\n        arrows: false,\n        dots: true,\n        // ref={(slider) => (customerSlider.current = slider)}\n        ref: (slider) => (customerSlider.current = slider),\n        \n    }\n\n    console.log(customerSlider.current)\n\n\n\n    return (\n        <div className=\"cards--container\">\n                <Slider {...settings} >\n                    {info.map(item => <Card name={item.authorName} quote={item.quote} position={item.position}/>)}\n                </Slider>\n                <div className=\"cards--btn--container\">\n                    <BsChevronLeft stroke-width=\"1px\" className=\"cards--btn\" onClick={() => customerSlider.current.slickPrev()} />\n                    <BsChevronRight stroke-width=\"1px\" className=\"cards--btn\" onClick={() => customerSlider.current.slickNext()}/>\n                </div>\n        </div>\n    )\n}\n\n\n\n\n\nexport default Cards\n","import React from 'react'\n// import Cards from '../Cards/Cards'\nimport './Page_Styled.css'\nimport Card from '../Card/Card'\nimport Cards from '../Cards/Cards'\n\nfunction Page() {\n    return (\n        <div className=\"page--outer-container\">\n           <div className=\"page--inner-container\">\n                {/* <Card /> */}\n                <Cards />\n           </div>\n        </div>\n    )\n}\n\nexport default Page\n","import Page from \"./components/Page/Page\";\n\n\nfunction App() {\n  return (\n    <div>\n        <Page />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}